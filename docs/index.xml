<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Argus</title>
    <link>https://pranay-lonkar.github.io/argus-docs-test/</link>
    <description>Recent content on Argus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Aug 2017 16:31:45 -0700</lastBuildDate><atom:link href="https://pranay-lonkar.github.io/argus-docs-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How It Works</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/docs/how-it-works/</link>
      <pubDate>Thu, 17 Aug 2017 16:31:45 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/docs/how-it-works/</guid>
      <description>In this section we will dig into the lower level implementation of Argus to understand how it works, and provide those interested in contributing an introduction to the fundamentals of its design. An understanding of Go interfaces is recommended.
Running Argus In-Cluster Argus depends on communicating with the Kubernetes API Server. There are two ways to communicate with the API Server. In-cluster, and out-of-cluster. The kubectl CLI would be an example of out-of-cluster communication.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/docs/configuration/</link>
      <pubDate>Wed, 16 Aug 2017 17:54:55 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/docs/configuration/</guid>
      <description>Configuring the Collectorset Controller via the Helm Chart The Collectorset controller Helm chart supports the following values:
Required Values:
 accessID (default: &amp;quot;&amp;quot;): The LogicMonitor API key ID. accessKey (default: &amp;quot;&amp;quot;): The LogicMonitor API key. account (default: &amp;quot;&amp;quot;): The LogicMonitor account name. debug (default: false): To enable verbose logging at debug level.  Optional Values:
 enableRBAC (default: true): Enable RBAC. If your cluster does not have RBAC enabled, this value should be set to false.</description>
    </item>
    
    <item>
      <title>Docs</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/docs/</link>
      <pubDate>Wed, 16 Aug 2017 16:29:26 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/docs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Argus</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/argus/</link>
      <pubDate>Sat, 12 Aug 2017 17:16:07 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/argus/</guid>
      <description>Argus is a tool that helps users of LogicMonitor keep up with the highly dynamic nature of a Kubernetes cluster. Argus runs as a Pod in your cluster, and uses LogicMonitor&amp;rsquo;s API to add Nodes, Pods, and Services into monitoring. Once in monitoring, data collection starts automatically. Data is collected for Nodes, Pods, Containers, and Services via the Kubernetes API. Additionally, you can leverage LogicMonitor DataSources to monitor your applications running within the cluster.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/getting-started/</link>
      <pubDate>Sat, 12 Aug 2017 16:20:39 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/getting-started/</guid>
      <description>The simplest way to get started with Argus is to install it using Helm version 3.
You&amp;rsquo;ll need to add the LogicMonitor chart repository:
$ helm repo add logicmonitor https://logicmonitor.github.com/k8s-helm-charts  Note: Argus helm charts will only be installed using Helm 3 on Kubernetes clusters newer than version 1.14.0. For any reason, if you are using Helm 2 on Kubernetes cluster older than 1.14.0, you will need to make tiller available on cluster using following steps:</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://pranay-lonkar.github.io/argus-docs-test/docs/monitoring/</link>
      <pubDate>Sat, 12 Aug 2017 16:20:39 -0700</pubDate>
      
      <guid>https://pranay-lonkar.github.io/argus-docs-test/docs/monitoring/</guid>
      <description>Argus adds Kubernetes resources into LogicMonitor, but the DataSources that apply to those resources are responsible for monitoring. LogicMonitor has a set of developed modules for monitoring Kubernetes, which you can import via the LM Exchange (Settings | DataSources | Add | From LogicMonitor Exchange). Filter Items with word “Kubernetes”. Add all logicmodules as per your requirements.
If kubernetes cluster is configured with Istio then you can add “Istio kubernetes” logicmodules as well.</description>
    </item>
    
  </channel>
</rss>
